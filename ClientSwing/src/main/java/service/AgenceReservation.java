
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import webservice.AgencePartenaire;
import webservice.Chambre;
import webservice.Client;
import webservice.Hotel;
import webservice.ObjectFactory;
import webservice.Reservation;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AgenceReservation", targetNamespace = "http://webService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AgenceReservation {


    /**
     * 
     * @return
     *     returns java.util.List<webservice.Hotel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voirListeHotel", targetNamespace = "http://webService/", className = "webservice.VoirListeHotel")
    @ResponseWrapper(localName = "voirListeHotelResponse", targetNamespace = "http://webService/", className = "webservice.VoirListeHotelResponse")
    @Action(input = "http://webService/AgenceReservation/voirListeHotelRequest", output = "http://webService/AgenceReservation/voirListeHotelResponse")
    public List<Hotel> voirListeHotel();

    /**
     * 
     * @param idHotel
     * @return
     *     returns java.util.List<webservice.Chambre>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voirListeChambres", targetNamespace = "http://webService/", className = "webservice.VoirListeChambres")
    @ResponseWrapper(localName = "voirListeChambresResponse", targetNamespace = "http://webService/", className = "webservice.VoirListeChambresResponse")
    @Action(input = "http://webService/AgenceReservation/voirListeChambresRequest", output = "http://webService/AgenceReservation/voirListeChambresResponse")
    public List<Chambre> voirListeChambres(
        @WebParam(name = "idHotel", targetNamespace = "")
        int idHotel);

    /**
     * 
     * @return
     *     returns java.util.List<webservice.Client>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voirListeClient", targetNamespace = "http://webService/", className = "webservice.VoirListeClient")
    @ResponseWrapper(localName = "voirListeClientResponse", targetNamespace = "http://webService/", className = "webservice.VoirListeClientResponse")
    @Action(input = "http://webService/AgenceReservation/voirListeClientRequest", output = "http://webService/AgenceReservation/voirListeClientResponse")
    public List<Client> voirListeClient();

    /**
     * 
     * @return
     *     returns java.util.List<webservice.Reservation>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voirListeReservation", targetNamespace = "http://webService/", className = "webservice.VoirListeReservation")
    @ResponseWrapper(localName = "voirListeReservationResponse", targetNamespace = "http://webService/", className = "webservice.VoirListeReservationResponse")
    @Action(input = "http://webService/AgenceReservation/voirListeReservationRequest", output = "http://webService/AgenceReservation/voirListeReservationResponse")
    public List<Reservation> voirListeReservation();

    /**
     * 
     * @param dateNaissance
     * @param carteCredit
     * @param nom
     * @param prenom
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ajouterClient", targetNamespace = "http://webService/", className = "webservice.AjouterClient")
    @ResponseWrapper(localName = "ajouterClientResponse", targetNamespace = "http://webService/", className = "webservice.AjouterClientResponse")
    @Action(input = "http://webService/AgenceReservation/ajouterClientRequest", output = "http://webService/AgenceReservation/ajouterClientResponse")
    public String ajouterClient(
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "prenom", targetNamespace = "")
        String prenom,
        @WebParam(name = "dateNaissance", targetNamespace = "")
        XMLGregorianCalendar dateNaissance,
        @WebParam(name = "carteCredit", targetNamespace = "")
        String carteCredit);

    /**
     * 
     * @param dateDebut
     * @param dateNaissance
     * @param nombrePersonnes
     * @param prenomClient
     * @param nomHotel
     * @param carteCredit
     * @param nomAgence
     * @param dateFin
     * @param numeroChambre
     * @param nomClient
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "faireReservation", targetNamespace = "http://webService/", className = "webservice.FaireReservation")
    @ResponseWrapper(localName = "faireReservationResponse", targetNamespace = "http://webService/", className = "webservice.FaireReservationResponse")
    @Action(input = "http://webService/AgenceReservation/faireReservationRequest", output = "http://webService/AgenceReservation/faireReservationResponse")
    public String faireReservation(
        @WebParam(name = "nomHotel", targetNamespace = "")
        String nomHotel,
        @WebParam(name = "numeroChambre", targetNamespace = "")
        int numeroChambre,
        @WebParam(name = "dateDebut", targetNamespace = "")
        XMLGregorianCalendar dateDebut,
        @WebParam(name = "dateFin", targetNamespace = "")
        XMLGregorianCalendar dateFin,
        @WebParam(name = "nomClient", targetNamespace = "")
        String nomClient,
        @WebParam(name = "prenomClient", targetNamespace = "")
        String prenomClient,
        @WebParam(name = "dateNaissance", targetNamespace = "")
        XMLGregorianCalendar dateNaissance,
        @WebParam(name = "carteCredit", targetNamespace = "")
        String carteCredit,
        @WebParam(name = "nomAgence", targetNamespace = "")
        String nomAgence,
        @WebParam(name = "nombrePersonnes", targetNamespace = "")
        int nombrePersonnes);

    /**
     * 
     * @param idReservation
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "annulerReservation", targetNamespace = "http://webService/", className = "webservice.AnnulerReservation")
    @ResponseWrapper(localName = "annulerReservationResponse", targetNamespace = "http://webService/", className = "webservice.AnnulerReservationResponse")
    @Action(input = "http://webService/AgenceReservation/annulerReservationRequest", output = "http://webService/AgenceReservation/annulerReservationResponse")
    public String annulerReservation(
        @WebParam(name = "idReservation", targetNamespace = "")
        int idReservation);

    /**
     * 
     * @param prixMin
     * @param ville
     * @param prixMax
     * @param nombrePersonnes
     * @param nombreEtoiles
     * @param dateArrivee
     * @param dateDepart
     * @return
     *     returns java.util.List<webservice.Hotel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rechercherDispo", targetNamespace = "http://webService/", className = "webservice.RechercherDispo")
    @ResponseWrapper(localName = "rechercherDispoResponse", targetNamespace = "http://webService/", className = "webservice.RechercherDispoResponse")
    @Action(input = "http://webService/AgenceReservation/rechercherDispoRequest", output = "http://webService/AgenceReservation/rechercherDispoResponse")
    public List<Hotel> rechercherDispo(
        @WebParam(name = "ville", targetNamespace = "")
        String ville,
        @WebParam(name = "dateArrivee", targetNamespace = "")
        XMLGregorianCalendar dateArrivee,
        @WebParam(name = "dateDepart", targetNamespace = "")
        XMLGregorianCalendar dateDepart,
        @WebParam(name = "prixMin", targetNamespace = "")
        double prixMin,
        @WebParam(name = "prixMax", targetNamespace = "")
        double prixMax,
        @WebParam(name = "nombreEtoiles", targetNamespace = "")
        int nombreEtoiles,
        @WebParam(name = "nombrePersonnes", targetNamespace = "")
        int nombrePersonnes);

    /**
     * 
     * @param motDePasse
     * @param login
     * @return
     *     returns webservice.AgencePartenaire
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "connexionAgence", targetNamespace = "http://webService/", className = "webservice.ConnexionAgence")
    @ResponseWrapper(localName = "connexionAgenceResponse", targetNamespace = "http://webService/", className = "webservice.ConnexionAgenceResponse")
    @Action(input = "http://webService/AgenceReservation/connexionAgenceRequest", output = "http://webService/AgenceReservation/connexionAgenceResponse")
    public AgencePartenaire connexionAgence(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "motDePasse", targetNamespace = "")
        String motDePasse);

}
